// By adding a front matter to this file, it will be parsed by Jekyll, and the following liquid tag will be resolved
const baseUrl = "/preview-template/campus-experts/campus-experts.github.io/pr/3371";

const searchBarHTML =
`<div class="border-bottom p-2"><a href="${baseUrl}/experts">
    <div class="columns">
      <div class="column w-60">
        <p class="h5 m-0"><svg viewBox="0 0 183 195" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
            <path d="M0,0 L14,189" id="Line" stroke="#000000" stroke-width="6" stroke-linecap="round" stroke-linejoin="round"></path>
            <path d="M0.0910775736,2.7746943 C0.0910775736,2.7746943 34.9387306,28.1262657 90.4831518,24.0699511 C146.027573,20.0136364 179.500414,49.4661255 179.500414,49.4661255 C179.500414,49.4661255 140.384611,51.5326597 99.1121437,90.3599317 C57.8396768,129.187204 11.3348687,139.75708 11.3348687,139.75708 L0.0910775736,2.7746943 Z"
              id="Path-2" fill="#000000"></path>
          </svg>Experts</p>
      </div>
      <div class="column jumpto">
        <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-on-nav-focus js-jump-to-badge-jump">Jump
          to<span class="d-inline-block ml-1 v-align-middle">↵</span></div>
      </div>
    </div>
  </a></div><a href="${baseUrl}/events"></a>
<div class="border-bottom p-2"><a href="${baseUrl}/events">
    <div class="columns">
      <div class="column w-60">
        <p class="h5 m-0"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16">
            <path fill-rule="evenodd" d="M13 2h-1v1.5c0 .28-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5V2H6v1.5c0 .28-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5V2H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 12H2V5h11v9zM5 3H4V1h1v2zm6 0h-1V1h1v2zM6 7H5V6h1v1zm2 0H7V6h1v1zm2 0H9V6h1v1zm2 0h-1V6h1v1zM4 9H3V8h1v1zm2 0H5V8h1v1zm2 0H7V8h1v1zm2 0H9V8h1v1zm2 0h-1V8h1v1zm-8 2H3v-1h1v1zm2 0H5v-1h1v1zm2 0H7v-1h1v1zm2 0H9v-1h1v1zm2 0h-1v-1h1v1zm-8 2H3v-1h1v1zm2 0H5v-1h1v1zm2 0H7v-1h1v1zm2 0H9v-1h1v1z"></path>
          </svg>Events</p>
      </div>
      <div class="column jumpto">
        <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-on-nav-focus js-jump-to-badge-jump">Jump
          to<span class="d-inline-block ml-1 v-align-middle">↵</span></div>
      </div>
    </div>
  </a></div><a href="${baseUrl}/posts"></a>
<div class="border-bottom p-2"><a href="${baseUrl}/posts">
    <div class="columns">
      <div class="column w-60">
        <p class="h5 m-0"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"></path>
          </svg>Posts</p>
      </div>
      <div class="column jumpto">
        <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-on-nav-focus js-jump-to-badge-jump">Jump
          to<span class="d-inline-block ml-1 v-align-middle">↵</span></div>
      </div>
    </div>
  </a></div><a href="${baseUrl}/explore"></a>
<div class="border-bottom p-2"><a href="${baseUrl}/explore">
    <div class="columns">
      <div class="column w-60">
        <p class="h5 m-0"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16">
            <path fill-rule="evenodd" d="M7 1C3.14 1 0 4.14 0 8s3.14 7 7 7c.48 0 .94-.05 1.38-.14-.17-.08-.2-.73-.02-1.09.19-.41.81-1.45.2-1.8-.61-.35-.44-.5-.81-.91-.37-.41-.22-.47-.25-.58-.08-.34.36-.89.39-.94.02-.06.02-.27 0-.33 0-.08-.27-.22-.34-.23-.06 0-.11.11-.2.13-.09.02-.5-.25-.59-.33-.09-.08-.14-.23-.27-.34-.13-.13-.14-.03-.33-.11s-.8-.31-1.28-.48c-.48-.19-.52-.47-.52-.66-.02-.2-.3-.47-.42-.67-.14-.2-.16-.47-.2-.41-.04.06.25.78.2.81-.05.02-.16-.2-.3-.38-.14-.19.14-.09-.3-.95s.14-1.3.17-1.75c.03-.45.38.17.19-.13-.19-.3 0-.89-.14-1.11-.13-.22-.88.25-.88.25.02-.22.69-.58 1.16-.92.47-.34.78-.06 1.16.05.39.13.41.09.28-.05-.13-.13.06-.17.36-.13.28.05.38.41.83.36.47-.03.05.09.11.22s-.06.11-.38.3c-.3.2.02.22.55.61s.38-.25.31-.55c-.07-.3.39-.06.39-.06.33.22.27.02.5.08.23.06.91.64.91.64-.83.44-.31.48-.17.59.14.11-.28.3-.28.3-.17-.17-.19.02-.3.08-.11.06-.02.22-.02.22-.56.09-.44.69-.42.83 0 .14-.38.36-.47.58-.09.2.25.64.06.66-.19.03-.34-.66-1.31-.41-.3.08-.94.41-.59 1.08.36.69.92-.19 1.11-.09.19.1-.06.53-.02.55.04.02.53.02.56.61.03.59.77.53.92.55.17 0 .7-.44.77-.45.06-.03.38-.28 1.03.09.66.36.98.31 1.2.47.22.16.08.47.28.58.2.11 1.06-.03 1.28.31.22.34-.88 2.09-1.22 2.28-.34.19-.48.64-.84.92s-.81.64-1.27.91c-.41.23-.47.66-.66.8 3.14-.7 5.48-3.5 5.48-6.84 0-3.86-3.14-7-7-7L7 1zm1.64 6.56c-.09.03-.28.22-.78-.08-.48-.3-.81-.23-.86-.28 0 0-.05-.11.17-.14.44-.05.98.41 1.11.41.13 0 .19-.13.41-.05.22.08.05.13-.05.14zM6.34 1.7c-.05-.03.03-.08.09-.14.03-.03.02-.11.05-.14.11-.11.61-.25.52.03-.11.27-.58.3-.66.25zm1.23.89c-.19-.02-.58-.05-.52-.14.3-.28-.09-.38-.34-.38-.25-.02-.34-.16-.22-.19.12-.03.61.02.7.08.08.06.52.25.55.38.02.13 0 .25-.17.25zm1.47-.05c-.14.09-.83-.41-.95-.52-.56-.48-.89-.31-1-.41-.11-.1-.08-.19.11-.34.19-.15.69.06 1 .09.3.03.66.27.66.55.02.25.33.5.19.63h-.01z"></path>
          </svg>Explore</p>
      </div>
      <div class="column jumpto">
        <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-on-nav-focus js-jump-to-badge-jump">Jump
          to<span class="d-inline-block ml-1 v-align-middle">↵</span></div>
      </div>
    </div>
  </a>
</div>`

const ceSearchItem = user => {
  return `<a href="${baseUrl}/${user.url}">
  <div class="border-bottom p-2">
    <div class="columns">
      <div class="column"><img src="${user.avatar}" style="width: 50px;" class="circle"></div>
      <div class="two-thirds column">
        <p class="h5 m-0">${user.name || user.shortname}</p>
        <p class="blockquote">${user.university}</p>
      </div>
    </div>
  </div>
</a>`
}

const postSearchItem = post => {
  return `<a href="${post.url}">
  <div class="border-bottom p-2">
    <div class="columns">
      <div class="two-thirds column">
        <p class="h5 m-0">${post.name}</p>
        <p class="blockquote">${post.author}</p>
      </div>
    </div>
  </div>
</a>`
}

const eventSearchItem = event => {
  return `<a href="${event.url}" target="_blank">
  <div class="border-bottom p-2">
    <div class="columns">
      <div class="two-thirds column">
        <p class="h5 m-0">${event.name}</p>
        <p class="blockquote">${event.type}</p>
      </div>
    </div>
  </div>
</a>`
}

let searchText, searchResult
const searchList = window.search.searchList

const escapeRegex = s => s.replace(/[-\/\\^$*+?.()|[\]{}\<\>\"\']/g, '\\$&')
const escapeHtml = s => s.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/\'/g, '&#39;').replace(/\//g, '&#x2F;')

const showDefaultSearchMenu = () => {
  searchResult.style.visibility = 'visible'
  searchResult.innerHTML = searchBarHTML
};

const closeSearch = () => {
  searchResult.style.visibility = 'hidden'
}


const runSearch = val => {
  // Empty
  if (!val) {
    showDefaultSearchMenu()
    return
  }

  const searchRegex = RegExp(escapeRegex(val), 'i')
  switch (window.search.type) {
    case 'campusexperts':
      return ceSearch(escapeHtml(val), searchRegex)
    case 'post':
      return postSearch(escapeHtml(val), searchRegex)
    case 'event':
      return eventSearch(escapeHtml(val), searchRegex)
  }
}

// Campus Expert Search
const ceSearch = (val, RegVal) => {
  const users = searchList.filter(x =>
      RegVal.test(x.name) ||
      RegVal.test(x.shortname) ||
      RegVal.test(x.university) ||
      RegVal.test(x.city)
    ).slice(0, 5)

  searchResult.style.visibility = "visible"

  if (!users.length) {
    searchResult.innerHTML = `<p class="p-3 p-lg-2">No results found for "${val}"</p>`
    return
  }

  searchResult.innerHTML = ""

  users.forEach(user => {
    searchResult.innerHTML += ceSearchItem(user)
  })
}

// Post Search
const postSearch = (val, RegVal) => {
  // Match on name or excerpt
  const posts = searchList.filter(x => RegVal.test(x.name) || RegVal.test(x.excerpt)).slice(0, 3)

  searchResult.style.visibility = "visible"

  if (!posts.length) {
    searchResult.innerHTML = `<p class="p-3 p-lg-2">No results found for "${val}"</p>`
    return
  }

  searchResult.innerHTML = ""


  posts.forEach(post => {
    searchResult.innerHTML += postSearchItem(post)
  })
}

// Event Search
const eventSearch = (val, RegVal) => {
  // Match on name, description, country and type
  const events = searchList.filter(x => RegVal.test(x.name) || RegVal.test(x.description) || RegVal.test(x.country) || RegVal.test(x.type)).slice(0, 3)

  searchResult.style.visibility = "visible"

  if (!events.length) {
    searchResult.innerHTML = `<p class="p-3 p-lg-2">No results found for "${val}"</p>`
    return
  }

  searchResult.innerHTML = "";

  events.forEach(event => {
    searchResult.innerHTML += eventSearchItem(event)
  })
}

document.addEventListener("DOMContentLoaded", () => {
  searchText = document.getElementById("search-text")
  searchResult = document.getElementById("search-result")
  searchText.addEventListener("focus", e => runSearch(e.target.value))
  searchText.addEventListener("input", e => runSearch(e.target.value))
  // Keyup is after the search redirect...
  searchText.addEventListener("keydown", e => {
    if (e.key === 'Enter') {
      e.preventDefault()

      // Nothing in the textbox
      if (!searchText.value) return;

      // The first child doesn't have a link, no matches
      if (!searchResult.firstChild.href) return;

      // Change href, like clicking a link
      window.location.href = searchResult.firstChild.href;
    }
  })
  searchText.placeholder = window.search.title
})
